<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycompany.webapp.dao.MemberDao">
	 <insert id="insertMember" parameterType="member">
        insert into member(member_id, member_name, birthdate, member_pw, post_no, address, address_Detail, tel, email, aff_center, hope_ctg, menabled, mrole)
        values (#{memberId}, #{memberName}, #{birthdate}, #{memberPw}, #{postNo}, #{address}, #{addressDetail}, #{tel}, #{email}, #{affCenter}, #{hopeCtg}, #{menabled}, #{mrole})
    </insert>
    
    
    
    <select id ="getTotalVolOfUser"  resultType="VolOfUserDto">
		SELECT member_id AS memberId, 
		       SUM(daily_hours) AS totalHours, COUNT(DISTINCT PROGRAM_NO) AS totalPrograms
		FROM (
		    SELECT VAD.member_id, 
		           VAD.program_no,
		           ASCH.apply_date,
		           (VP.act_end_time - VP.act_bgn_time) AS daily_hours
				    FROM VOLUNTEER_APPLICATION_DETAIL VAD
		    JOIN VOLUNTEER_PROGRAM VP ON VAD.program_no = VP.program_no 
		    JOIN APPLY_SCHEDULE ASCH ON VAD.member_id = ASCH.member_id 
		                             AND VAD.program_no = ASCH.program_no
		    WHERE VAD.member_id ='태환짱1' AND VAD.stts_no = '6'
		) 
		GROUP BY member_id
    </select>

    
     <select id ="getAppliedVolOfUser"  resultType="VolOfUserDto">
		SELECT member_id AS memberId, 
		       COUNT(DISTINCT PROGRAM_NO) AS appliedVolPrograms
		FROM (
		    SELECT VAD.member_id, 
		           VAD.program_no,
		           ASCH.apply_date,
		           (VP.act_end_time - VP.act_bgn_time) AS daily_hours
				    FROM VOLUNTEER_APPLICATION_DETAIL VAD
		    JOIN VOLUNTEER_PROGRAM VP ON VAD.program_no = VP.program_no 
		    JOIN APPLY_SCHEDULE ASCH ON VAD.member_id = ASCH.member_id 
		                             AND VAD.program_no = ASCH.program_no
		    WHERE VAD.member_id=#{memberId} AND VAD.stts_no = '1'
		) 
		GROUP BY member_id
    </select>
    
    
    
    
    
    
    
    
    
    <select id="selectByMemberId" parameterType="String" resultType="Member">
        select member_id, member_name, birthdate, member_pw, post_no, address, address_detail, tel, email, aff_center, hope_ctg, menabled, mrole
        from member
        where member_id = #{memberId}
    </select>

    <select id="getMemberCount" resultType="int">
        select count(*)
        from member
        where mrole='ROLE_USER'
    </select>
    
    <select id="getMemberList" parameterType="pager" resultType="member">
        <![CDATA[
        select rnum, member_id, member_name, tel
        from (
            select rownum as rnum, member_id, member_name, tel
                from (
                    select member_id, member_name, tel
                    from member
                    where mrole='ROLE_USER'
                    order by member_id asc
                    )
            where rownum<=#{endRowNo}
            ) 
        where rnum>=#{startRowNo}    
        ]]>
    </select>
    
    <select id="findIdByPhoneNum" resultType="member">
        select member_id, member_name, tel, email
        from member
        where member_name=#{memberName} and tel=#{tel}
    </select>

	<select id="findIdByEmail" resultType="member">
		select member_id, member_name, tel, email
		from member
		where member_name=#{memberName} and email=#{email}
	</select>
    
    
    <select id="findPwByPhoneNum">
        select member_pw, member_name, member_id, tel, email
        from member
        where member_name=#{memberName} and member_id=#{memberId} and tel=#{tel}
    </select>
    
    <update id="updatePw">
		update member
		set member_pw = #{password}
		where member_id = #{memberId}
    </update>
</mapper>